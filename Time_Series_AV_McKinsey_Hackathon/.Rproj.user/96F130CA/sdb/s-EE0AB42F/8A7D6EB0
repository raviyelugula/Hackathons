{
    "collab_server" : "",
    "contents" : "require(forecast)\nrequire(ggplot2)\nrequire(dplyr)\nrequire(dummies)\nre\nrequire(randomForest)\ntrain_raw = read.csv('train_aWnotuB.csv')\ntest_raw = read.csv('test_BdBKkAj.csv')\nglimpse(train_raw)\n\nMissing_data_Check <- function(data_set){\n  NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y))))) \n  Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))\n  Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))\n  Empty_Count = sapply(data_set,function(y) sum(length(which(y==''))))\n  Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count\n  return( Total_NonData )\n}\n\nMissing_data_Check(train_raw)\nMissing_data_Check(test_raw)\n\nPrediction_hrs = 24*(as.Date(\"2017-10-31 23:00:00\")-as.Date(\"2017-07-01 00:00:00\"))\n\ntrain_data = train_raw\ntrain_data$Day =as.factor(weekdays(as.Date(train_data$DateTime)))\ntrain_data$Month =as.factor(months(as.Date(train_data$DateTime)))\ntrain_data$Hour =as.factor(format(as.POSIXct(train_data$DateTime, \n                                             format=\"%Y-%m-%d %H:%M:%S\"), \n                                  format=\"%H\"))\ntrain_data$Year =as.factor(format(as.POSIXct(train_data$DateTime, \n                                             format=\"%Y-%m-%d %H:%M:%S\"), \n                                  format=\"%Y\"))\n\ntrain_data_J1 = subset(train_data, train_data$Junction == '1')\ntrain_data_J2 = subset(train_data, train_data$Junction == '2')\ntrain_data_J3 = subset(train_data, train_data$Junction == '3')\ntrain_data_J4 = subset(train_data, train_data$Junction == '4')\n\nfirstHr = 24*(as.Date(\"2017-06-30 23:00:00\")-as.Date(\"2015-11-01 00:00:00\"))\n#ts_train_J1 = ts(train_data_J1$Vehicles, start(2015,firstHr), frequency = 24*365)\n\ntime_vector= c('00','01','02','03','04','05',\n               '06','07','08','09','10','11',\n               '12','13','14','15','16','17',\n               '18','19','20','21','22','23')\nforecast = list()\ni = 1\nfor(time in time_vector){\n  temp = ts(train_data_J1[train_data_J1$Hour== time,'Vehicles'],\n            start(2015,firstHr), frequency = 365)\n  print(temp)\n  ARIMA_model = auto.arima(temp[1:608])\n  ARIMA_model\n  y_predict = forecast::forecast(ARIMA_model,h=123)\n  forecast[[i]] = round(y_predict$mean)\n  i = i +1\n}\n\nday_names = paste0(rep('day',123),1:123)\nfor(j in 1:123){\n  temp = data.frame(numeric())\n  for(i in 1:24){\n    temp =rbind(temp,forecast[[i]][j]) \n  }\n  assign(day_names[j], temp)\n}\n\nforecast_df_J1 = cbind(day1,day2,day3,day4,day5,day6,day7,day8,day9,day10,\n                       day11,day12,day13,day14,day15,day16,day17,day18,day19,\n                       day20,day21,day22,day23,day24,day25,day26,day27,day28,\n                       day29,day30,day31,day32,day33,day34,day35,day36,day37,\n                       day38,day39,day40,day41,day42,day43,day44,day45,day46,\n                       day47,day48,day49,day50,day51,day52,day53,day54,day55,\n                       day56,day57,day58,day59,day60,day61,day62,day63,day64,\n                       day65,day66,day67,day68,day69,day70,day71,day72,day73,\n                       day74,day75,day76,day77,day78,day79,day80,day81,day82,\n                       day83,day84,day85,day86,day87,day88,day89,day90,day91,\n                       day92,day93,day94,day95,day96,day97,day98,day99,day100,\n                       day101,day102,day103,day104,day105,day106,day107,day108,\n                       day109,day110,day111,day112,day113,day114,day115,day116,\n                       day117,day118,day119,day120,day121,day122,day123)\ncolnames(forecast_df_J1) = c(1:123)\n#View(forecast_df_J1)\n\nrm(list = ls(pattern = \"day\")) \nrm(list=c('forecast'))\n\n#J2\nforecast = list()\ni = 1\nfor(time in time_vector){\n  temp = ts(train_data_J2[train_data_J2$Hour== time,'Vehicles'],\n            start(2015,firstHr), frequency = 365)\n  print(temp)\n  ARIMA_model = auto.arima(temp[1:608])\n  ARIMA_model\n  y_predict = forecast::forecast(ARIMA_model,h=123)\n  forecast[[i]] = round(y_predict$mean)\n  i = i +1\n}\n\nday_names = paste0(rep('day',123),1:123)\nfor(j in 1:123){\n  temp = data.frame(numeric())\n  for(i in 1:24){\n    temp =rbind(temp,forecast[[i]][j]) \n  }\n  assign(day_names[j], temp)\n}\n\nforecast_df_J2 = cbind(day1,day2,day3,day4,day5,day6,day7,day8,day9,day10,\n                       day11,day12,day13,day14,day15,day16,day17,day18,day19,\n                       day20,day21,day22,day23,day24,day25,day26,day27,day28,\n                       day29,day30,day31,day32,day33,day34,day35,day36,day37,\n                       day38,day39,day40,day41,day42,day43,day44,day45,day46,\n                       day47,day48,day49,day50,day51,day52,day53,day54,day55,\n                       day56,day57,day58,day59,day60,day61,day62,day63,day64,\n                       day65,day66,day67,day68,day69,day70,day71,day72,day73,\n                       day74,day75,day76,day77,day78,day79,day80,day81,day82,\n                       day83,day84,day85,day86,day87,day88,day89,day90,day91,\n                       day92,day93,day94,day95,day96,day97,day98,day99,day100,\n                       day101,day102,day103,day104,day105,day106,day107,day108,\n                       day109,day110,day111,day112,day113,day114,day115,day116,\n                       day117,day118,day119,day120,day121,day122,day123)\ncolnames(forecast_df_J2) = c(1:123)\n#View(forecast_df_J2)\n\nrm(list = ls(pattern = \"day\")) \nrm(list=c('forecast'))\n\n#J3\nforecast = list()\ni = 1\nfor(time in time_vector){\n  temp = ts(train_data_J3[train_data_J3$Hour== time,'Vehicles'],\n            start(2015,firstHr), frequency = 365)\n  print(temp)\n  ARIMA_model = auto.arima(temp[1:608])\n  ARIMA_model\n  y_predict = forecast::forecast(ARIMA_model,h=123)\n  forecast[[i]] = round(y_predict$mean)\n  i = i +1\n}\n\nday_names = paste0(rep('day',123),1:123)\nfor(j in 1:123){\n  temp = data.frame(numeric())\n  for(i in 1:24){\n    temp =rbind(temp,forecast[[i]][j]) \n  }\n  assign(day_names[j], temp)\n}\n\nforecast_df_J3 = cbind(day1,day2,day3,day4,day5,day6,day7,day8,day9,day10,\n                       day11,day12,day13,day14,day15,day16,day17,day18,day19,\n                       day20,day21,day22,day23,day24,day25,day26,day27,day28,\n                       day29,day30,day31,day32,day33,day34,day35,day36,day37,\n                       day38,day39,day40,day41,day42,day43,day44,day45,day46,\n                       day47,day48,day49,day50,day51,day52,day53,day54,day55,\n                       day56,day57,day58,day59,day60,day61,day62,day63,day64,\n                       day65,day66,day67,day68,day69,day70,day71,day72,day73,\n                       day74,day75,day76,day77,day78,day79,day80,day81,day82,\n                       day83,day84,day85,day86,day87,day88,day89,day90,day91,\n                       day92,day93,day94,day95,day96,day97,day98,day99,day100,\n                       day101,day102,day103,day104,day105,day106,day107,day108,\n                       day109,day110,day111,day112,day113,day114,day115,day116,\n                       day117,day118,day119,day120,day121,day122,day123)\ncolnames(forecast_df_J3) = c(1:123)\n#View(forecast_df_J3)\n\nrm(list = ls(pattern = \"day\")) \nrm(list=c('forecast'))\n\n#J4\nfirstHr_J4 = 24*(as.Date(\"2017-06-30 23:00:00\")-as.Date(\"2017-01-01 00:00:00\"))\nforecast = list()\ni = 1\nfor(time in time_vector){\n  temp = ts(train_data_J4[train_data_J4$Hour== time,'Vehicles'],\n            start(2017,firstHr_J4), frequency = 365)\n  print(temp)\n  ARIMA_model = auto.arima(temp[1:181])\n  ARIMA_model\n  y_predict = forecast::forecast(ARIMA_model,h=123)\n  forecast[[i]] = round(y_predict$mean)\n  i = i +1\n}\n\nday_names = paste0(rep('day',123),1:123)\nfor(j in 1:123){\n  temp = data.frame(numeric())\n  for(i in 1:24){\n    temp =rbind(temp,forecast[[i]][j]) \n  }\n  assign(day_names[j], temp)\n}\n\nforecast_df_J4 = cbind(day1,day2,day3,day4,day5,day6,day7,day8,day9,day10,\n                       day11,day12,day13,day14,day15,day16,day17,day18,day19,\n                       day20,day21,day22,day23,day24,day25,day26,day27,day28,\n                       day29,day30,day31,day32,day33,day34,day35,day36,day37,\n                       day38,day39,day40,day41,day42,day43,day44,day45,day46,\n                       day47,day48,day49,day50,day51,day52,day53,day54,day55,\n                       day56,day57,day58,day59,day60,day61,day62,day63,day64,\n                       day65,day66,day67,day68,day69,day70,day71,day72,day73,\n                       day74,day75,day76,day77,day78,day79,day80,day81,day82,\n                       day83,day84,day85,day86,day87,day88,day89,day90,day91,\n                       day92,day93,day94,day95,day96,day97,day98,day99,day100,\n                       day101,day102,day103,day104,day105,day106,day107,day108,\n                       day109,day110,day111,day112,day113,day114,day115,day116,\n                       day117,day118,day119,day120,day121,day122,day123)\ncolnames(forecast_df_J4) = c(1:123)\n#View(forecast_df_J4)\n\nrm(list = ls(pattern = \"day\")) \nrm(forecast)\n\ntest_dat = test_raw\ntest_dat$Day =as.factor(weekdays(as.Date(test_dat$DateTime)))\ntest_dat$Month =as.factor(months(as.Date(test_dat$DateTime)))\ntest_dat$Hour =as.factor(format(as.POSIXct(test_dat$DateTime, \n                                             format=\"%Y-%m-%d %H:%M:%S\"), \n                                  format=\"%H\"))\ntest_dat$Year =as.factor(format(as.POSIXct(test_dat$DateTime, \n                                             format=\"%Y-%m-%d %H:%M:%S\"), \n                                  format=\"%Y\"))\ntest_dat$Date =as.factor(format(as.POSIXct(test_dat$DateTime, \n                                           format=\"%Y-%m-%d %H:%M:%S\"), \n                                format=\"%Y-%m-%d\"))\n\n\ntest_dat_J1 = subset(test_dat, test_dat$Junction == '1')\ntest_dat_J2 = subset(test_dat, test_dat$Junction == '2')\ntest_dat_J3 = subset(test_dat, test_dat$Junction == '3')\ntest_dat_J4 = subset(test_dat, test_dat$Junction == '4')\n\nrequire(reshape2)\n\n\ntemp = data.frame(\n  D1 = c(1,2,3,4),\n  D2 = c(5,6,7,8),\n  D3 = c(9,10,11,12),\n  D4 = c(13,14,15,16),\n  Hr = c(0,1,2,3)\n)\ntemp_melt = melt(temp, id = c('Hr'))\n\nforecast_df_J1$Hr = c(1:24)\ncolnames(forecast_df_J1) = c(paste0('D',c(1:123)),'Hr')\nforecast_df_J2$Hr = c(1:24)\ncolnames(forecast_df_J2) = c(paste0('D',c(1:123)),'Hr')\nforecast_df_J3$Hr = c(1:24)\ncolnames(forecast_df_J3) = c(paste0('D',c(1:123)),'Hr')\nforecast_df_J4$Hr = c(1:24)\ncolnames(forecast_df_J4) = c(paste0('D',c(1:123)),'Hr')\n\nforecast_df_J1_test = melt(forecast_df_J1, id=c('Hr'))\nforecast_df_J2_test = melt(forecast_df_J2, id=c('Hr'))\nforecast_df_J3_test = melt(forecast_df_J3, id=c('Hr'))\nforecast_df_J4_test = melt(forecast_df_J4, id=c('Hr'))\n\nF_dataes = unique(test_dat_J1$Date)\ndate_code = data.frame(Date = F_dataes,\n                       D_Code = c(paste0('D',c(1:123))))\n\ntest_dat_J1$hr_code = as.numeric(test_dat_J1$Hour)\ntest_dat_J2$hr_code = as.numeric(test_dat_J2$Hour)\ntest_dat_J3$hr_code = as.numeric(test_dat_J3$Hour)\ntest_dat_J4$hr_code = as.numeric(test_dat_J4$Hour)\n\ntest_dat_J1 = test_dat_J1 %>%\n                left_join(date_code, by ='Date')\ntest_dat_J2 = test_dat_J2 %>%\n                left_join(date_code, by ='Date')\ntest_dat_J3 = test_dat_J3 %>%\n                left_join(date_code, by ='Date')\ntest_dat_J4 = test_dat_J4 %>%\n                left_join(date_code, by ='Date')\n \n\ntest_dat_J1 = test_dat_J1 %>%\n                left_join(forecast_df_J1_test, by = c('hr_code' = 'Hr',\n                                                      'D_Code' = 'variable'))\ntest_dat_J2 = test_dat_J2 %>%\n                left_join(forecast_df_J2_test, by = c('hr_code' = 'Hr',\n                                                      'D_Code' = 'variable'))\ntest_dat_J3 = test_dat_J3 %>%\n                left_join(forecast_df_J3_test, by = c('hr_code' = 'Hr',\n                                                      'D_Code' = 'variable'))\ntest_dat_J4 = test_dat_J4 %>%\n                left_join(forecast_df_J4_test, by = c('hr_code' = 'Hr',\n                                                      'D_Code' = 'variable'))\ntest_dat_J1$Vehicles =  test_dat_J1$value\ntest_dat_J2$Vehicles =  test_dat_J2$value\ntest_dat_J3$Vehicles =  test_dat_J3$value\ntest_dat_J4$Vehicles =  test_dat_J4$value\n\nfinal_solution = rbind(test_dat_J1,test_dat_J2,test_dat_J3,test_dat_J4)\n\nSolution = final_solution[,c(3,12)]\nwrite.csv(Solution, 'Solution.csv', row.names = F)\n\n",
    "created" : 1510967043317.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1579535898",
    "id" : "8A7D6EB0",
    "lastKnownWriteTime" : 1511036743,
    "last_content_update" : 1512584928488,
    "path" : "~/GitHub/Hackathons/Time_Series_AV_McKinsey_Hackathon/mckinsey-analytics-hackathon.R",
    "project_path" : "mckinsey-analytics-hackathon.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}